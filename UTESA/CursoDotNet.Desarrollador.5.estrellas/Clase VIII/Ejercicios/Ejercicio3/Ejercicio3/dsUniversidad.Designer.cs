//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.26
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Ejercicio3 {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("dsUniversidad")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsUniversidad : System.Data.DataSet {
        
        private dtAlumnosDataTable tabledtAlumnos;
        
        private dtCursosDataTable tabledtCursos;
        
        private dtAlumnos_CursosDataTable tabledtAlumnos_Cursos;
        
        private System.Data.DataRelation relationrelAlumnos_Cursos;
        
        private System.Data.DataRelation relationrelCursos_Alumnos;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsUniversidad() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsUniversidad(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtAlumnos"] != null)) {
                    base.Tables.Add(new dtAlumnosDataTable(ds.Tables["dtAlumnos"]));
                }
                if ((ds.Tables["dtCursos"] != null)) {
                    base.Tables.Add(new dtCursosDataTable(ds.Tables["dtCursos"]));
                }
                if ((ds.Tables["dtAlumnos_Cursos"] != null)) {
                    base.Tables.Add(new dtAlumnos_CursosDataTable(ds.Tables["dtAlumnos_Cursos"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtAlumnosDataTable dtAlumnos {
            get {
                return this.tabledtAlumnos;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtCursosDataTable dtCursos {
            get {
                return this.tabledtCursos;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtAlumnos_CursosDataTable dtAlumnos_Cursos {
            get {
                return this.tabledtAlumnos_Cursos;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            dsUniversidad cln = ((dsUniversidad)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtAlumnos"] != null)) {
                    base.Tables.Add(new dtAlumnosDataTable(ds.Tables["dtAlumnos"]));
                }
                if ((ds.Tables["dtCursos"] != null)) {
                    base.Tables.Add(new dtCursosDataTable(ds.Tables["dtCursos"]));
                }
                if ((ds.Tables["dtAlumnos_Cursos"] != null)) {
                    base.Tables.Add(new dtAlumnos_CursosDataTable(ds.Tables["dtAlumnos_Cursos"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtAlumnos = ((dtAlumnosDataTable)(base.Tables["dtAlumnos"]));
            if ((initTable == true)) {
                if ((this.tabledtAlumnos != null)) {
                    this.tabledtAlumnos.InitVars();
                }
            }
            this.tabledtCursos = ((dtCursosDataTable)(base.Tables["dtCursos"]));
            if ((initTable == true)) {
                if ((this.tabledtCursos != null)) {
                    this.tabledtCursos.InitVars();
                }
            }
            this.tabledtAlumnos_Cursos = ((dtAlumnos_CursosDataTable)(base.Tables["dtAlumnos_Cursos"]));
            if ((initTable == true)) {
                if ((this.tabledtAlumnos_Cursos != null)) {
                    this.tabledtAlumnos_Cursos.InitVars();
                }
            }
            this.relationrelAlumnos_Cursos = this.Relations["relAlumnos_Cursos"];
            this.relationrelCursos_Alumnos = this.Relations["relCursos_Alumnos"];
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsUniversidad";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsUniversidad.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtAlumnos = new dtAlumnosDataTable();
            base.Tables.Add(this.tabledtAlumnos);
            this.tabledtCursos = new dtCursosDataTable();
            base.Tables.Add(this.tabledtCursos);
            this.tabledtAlumnos_Cursos = new dtAlumnos_CursosDataTable();
            base.Tables.Add(this.tabledtAlumnos_Cursos);
            System.Data.ForeignKeyConstraint fkc;
            fkc = new System.Data.ForeignKeyConstraint("relAlumnos_Cursos", new System.Data.DataColumn[] {
                        this.tabledtAlumnos.IDAlumnoColumn}, new System.Data.DataColumn[] {
                        this.tabledtAlumnos_Cursos.IDAlumnoColumn});
            this.tabledtAlumnos_Cursos.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.None;
            fkc.UpdateRule = System.Data.Rule.None;
            fkc = new System.Data.ForeignKeyConstraint("relCursos_Alumnos", new System.Data.DataColumn[] {
                        this.tabledtCursos.IDCursoColumn}, new System.Data.DataColumn[] {
                        this.tabledtAlumnos_Cursos.IDCursoColumn});
            this.tabledtAlumnos_Cursos.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.Cascade;
            fkc.DeleteRule = System.Data.Rule.None;
            fkc.UpdateRule = System.Data.Rule.None;
            this.relationrelAlumnos_Cursos = new System.Data.DataRelation("relAlumnos_Cursos", new System.Data.DataColumn[] {
                        this.tabledtAlumnos.IDAlumnoColumn}, new System.Data.DataColumn[] {
                        this.tabledtAlumnos_Cursos.IDAlumnoColumn}, false);
            this.Relations.Add(this.relationrelAlumnos_Cursos);
            this.relationrelCursos_Alumnos = new System.Data.DataRelation("relCursos_Alumnos", new System.Data.DataColumn[] {
                        this.tabledtCursos.IDCursoColumn}, new System.Data.DataColumn[] {
                        this.tabledtAlumnos_Cursos.IDCursoColumn}, false);
            this.Relations.Add(this.relationrelCursos_Alumnos);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtAlumnos() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtCursos() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtAlumnos_Cursos() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            dsUniversidad ds = new dsUniversidad();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void dtAlumnosRowChangeEventHandler(object sender, dtAlumnosRowChangeEvent e);
        
        public delegate void dtCursosRowChangeEventHandler(object sender, dtCursosRowChangeEvent e);
        
        public delegate void dtAlumnos_CursosRowChangeEventHandler(object sender, dtAlumnos_CursosRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtAlumnosDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnIDAlumno;
            
            private System.Data.DataColumn columnNombre;
            
            private System.Data.DataColumn columnApellido;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAlumnosDataTable() {
                this.TableName = "dtAlumnos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtAlumnosDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtAlumnosDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDAlumnoColumn {
                get {
                    return this.columnIDAlumno;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ApellidoColumn {
                get {
                    return this.columnApellido;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAlumnosRow this[int index] {
                get {
                    return ((dtAlumnosRow)(this.Rows[index]));
                }
            }
            
            public event dtAlumnosRowChangeEventHandler dtAlumnosRowChanging;
            
            public event dtAlumnosRowChangeEventHandler dtAlumnosRowChanged;
            
            public event dtAlumnosRowChangeEventHandler dtAlumnosRowDeleting;
            
            public event dtAlumnosRowChangeEventHandler dtAlumnosRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtAlumnosRow(dtAlumnosRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAlumnosRow AdddtAlumnosRow(string Nombre, string Apellido) {
                dtAlumnosRow rowdtAlumnosRow = ((dtAlumnosRow)(this.NewRow()));
                rowdtAlumnosRow.ItemArray = new object[] {
                        null,
                        Nombre,
                        Apellido};
                this.Rows.Add(rowdtAlumnosRow);
                return rowdtAlumnosRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAlumnosRow FindByIDAlumno(int IDAlumno) {
                return ((dtAlumnosRow)(this.Rows.Find(new object[] {
                            IDAlumno})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                dtAlumnosDataTable cln = ((dtAlumnosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new dtAlumnosDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIDAlumno = base.Columns["IDAlumno"];
                this.columnNombre = base.Columns["Nombre"];
                this.columnApellido = base.Columns["Apellido"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIDAlumno = new System.Data.DataColumn("IDAlumno", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDAlumno);
                this.columnNombre = new System.Data.DataColumn("Nombre", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.columnApellido = new System.Data.DataColumn("Apellido", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnApellido);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnIDAlumno}, true));
                this.columnIDAlumno.AutoIncrement = true;
                this.columnIDAlumno.AllowDBNull = false;
                this.columnIDAlumno.ReadOnly = true;
                this.columnIDAlumno.Unique = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAlumnosRow NewdtAlumnosRow() {
                return ((dtAlumnosRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new dtAlumnosRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(dtAlumnosRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtAlumnosRowChanged != null)) {
                    this.dtAlumnosRowChanged(this, new dtAlumnosRowChangeEvent(((dtAlumnosRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtAlumnosRowChanging != null)) {
                    this.dtAlumnosRowChanging(this, new dtAlumnosRowChangeEvent(((dtAlumnosRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtAlumnosRowDeleted != null)) {
                    this.dtAlumnosRowDeleted(this, new dtAlumnosRowChangeEvent(((dtAlumnosRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtAlumnosRowDeleting != null)) {
                    this.dtAlumnosRowDeleting(this, new dtAlumnosRowChangeEvent(((dtAlumnosRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtAlumnosRow(dtAlumnosRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsUniversidad ds = new dsUniversidad();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtAlumnosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtCursosDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnIDCurso;
            
            private System.Data.DataColumn columnCurso;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCursosDataTable() {
                this.TableName = "dtCursos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtCursosDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtCursosDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDCursoColumn {
                get {
                    return this.columnIDCurso;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CursoColumn {
                get {
                    return this.columnCurso;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCursosRow this[int index] {
                get {
                    return ((dtCursosRow)(this.Rows[index]));
                }
            }
            
            public event dtCursosRowChangeEventHandler dtCursosRowChanging;
            
            public event dtCursosRowChangeEventHandler dtCursosRowChanged;
            
            public event dtCursosRowChangeEventHandler dtCursosRowDeleting;
            
            public event dtCursosRowChangeEventHandler dtCursosRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtCursosRow(dtCursosRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCursosRow AdddtCursosRow(string Curso) {
                dtCursosRow rowdtCursosRow = ((dtCursosRow)(this.NewRow()));
                rowdtCursosRow.ItemArray = new object[] {
                        null,
                        Curso};
                this.Rows.Add(rowdtCursosRow);
                return rowdtCursosRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCursosRow FindByIDCurso(int IDCurso) {
                return ((dtCursosRow)(this.Rows.Find(new object[] {
                            IDCurso})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                dtCursosDataTable cln = ((dtCursosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new dtCursosDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIDCurso = base.Columns["IDCurso"];
                this.columnCurso = base.Columns["Curso"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIDCurso = new System.Data.DataColumn("IDCurso", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDCurso);
                this.columnCurso = new System.Data.DataColumn("Curso", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurso);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnIDCurso}, true));
                this.columnIDCurso.AutoIncrement = true;
                this.columnIDCurso.AutoIncrementSeed = 1;
                this.columnIDCurso.AllowDBNull = false;
                this.columnIDCurso.ReadOnly = true;
                this.columnIDCurso.Unique = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCursosRow NewdtCursosRow() {
                return ((dtCursosRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new dtCursosRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(dtCursosRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtCursosRowChanged != null)) {
                    this.dtCursosRowChanged(this, new dtCursosRowChangeEvent(((dtCursosRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtCursosRowChanging != null)) {
                    this.dtCursosRowChanging(this, new dtCursosRowChangeEvent(((dtCursosRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtCursosRowDeleted != null)) {
                    this.dtCursosRowDeleted(this, new dtCursosRowChangeEvent(((dtCursosRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtCursosRowDeleting != null)) {
                    this.dtCursosRowDeleting(this, new dtCursosRowChangeEvent(((dtCursosRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtCursosRow(dtCursosRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsUniversidad ds = new dsUniversidad();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtCursosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtAlumnos_CursosDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnIDAlumno;
            
            private System.Data.DataColumn columnIDCurso;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAlumnos_CursosDataTable() {
                this.TableName = "dtAlumnos_Cursos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtAlumnos_CursosDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtAlumnos_CursosDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDAlumnoColumn {
                get {
                    return this.columnIDAlumno;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDCursoColumn {
                get {
                    return this.columnIDCurso;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAlumnos_CursosRow this[int index] {
                get {
                    return ((dtAlumnos_CursosRow)(this.Rows[index]));
                }
            }
            
            public event dtAlumnos_CursosRowChangeEventHandler dtAlumnos_CursosRowChanging;
            
            public event dtAlumnos_CursosRowChangeEventHandler dtAlumnos_CursosRowChanged;
            
            public event dtAlumnos_CursosRowChangeEventHandler dtAlumnos_CursosRowDeleting;
            
            public event dtAlumnos_CursosRowChangeEventHandler dtAlumnos_CursosRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtAlumnos_CursosRow(dtAlumnos_CursosRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAlumnos_CursosRow AdddtAlumnos_CursosRow(dtAlumnosRow parentdtAlumnosRowByrelAlumnos_Cursos, dtCursosRow parentdtCursosRowByrelCursos_Alumnos) {
                dtAlumnos_CursosRow rowdtAlumnos_CursosRow = ((dtAlumnos_CursosRow)(this.NewRow()));
                rowdtAlumnos_CursosRow.ItemArray = new object[] {
                        parentdtAlumnosRowByrelAlumnos_Cursos[0],
                        parentdtCursosRowByrelCursos_Alumnos[0]};
                this.Rows.Add(rowdtAlumnos_CursosRow);
                return rowdtAlumnos_CursosRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                dtAlumnos_CursosDataTable cln = ((dtAlumnos_CursosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new dtAlumnos_CursosDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIDAlumno = base.Columns["IDAlumno"];
                this.columnIDCurso = base.Columns["IDCurso"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIDAlumno = new System.Data.DataColumn("IDAlumno", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDAlumno);
                this.columnIDCurso = new System.Data.DataColumn("IDCurso", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDCurso);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAlumnos_CursosRow NewdtAlumnos_CursosRow() {
                return ((dtAlumnos_CursosRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new dtAlumnos_CursosRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(dtAlumnos_CursosRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtAlumnos_CursosRowChanged != null)) {
                    this.dtAlumnos_CursosRowChanged(this, new dtAlumnos_CursosRowChangeEvent(((dtAlumnos_CursosRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtAlumnos_CursosRowChanging != null)) {
                    this.dtAlumnos_CursosRowChanging(this, new dtAlumnos_CursosRowChangeEvent(((dtAlumnos_CursosRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtAlumnos_CursosRowDeleted != null)) {
                    this.dtAlumnos_CursosRowDeleted(this, new dtAlumnos_CursosRowChangeEvent(((dtAlumnos_CursosRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtAlumnos_CursosRowDeleting != null)) {
                    this.dtAlumnos_CursosRowDeleting(this, new dtAlumnos_CursosRowChangeEvent(((dtAlumnos_CursosRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtAlumnos_CursosRow(dtAlumnos_CursosRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsUniversidad ds = new dsUniversidad();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtAlumnos_CursosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtAlumnosRow : System.Data.DataRow {
            
            private dtAlumnosDataTable tabledtAlumnos;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtAlumnosRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtAlumnos = ((dtAlumnosDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IDAlumno {
                get {
                    return ((int)(this[this.tabledtAlumnos.IDAlumnoColumn]));
                }
                set {
                    this[this.tabledtAlumnos.IDAlumnoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    try {
                        return ((string)(this[this.tabledtAlumnos.NombreColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Nombre\' in table \'dtAlumnos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAlumnos.NombreColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Apellido {
                get {
                    try {
                        return ((string)(this[this.tabledtAlumnos.ApellidoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Apellido\' in table \'dtAlumnos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAlumnos.ApellidoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNombreNull() {
                return this.IsNull(this.tabledtAlumnos.NombreColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNombreNull() {
                this[this.tabledtAlumnos.NombreColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApellidoNull() {
                return this.IsNull(this.tabledtAlumnos.ApellidoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApellidoNull() {
                this[this.tabledtAlumnos.ApellidoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAlumnos_CursosRow[] GetdtAlumnos_CursosRows() {
                return ((dtAlumnos_CursosRow[])(base.GetChildRows(this.Table.ChildRelations["relAlumnos_Cursos"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtCursosRow : System.Data.DataRow {
            
            private dtCursosDataTable tabledtCursos;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtCursosRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtCursos = ((dtCursosDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IDCurso {
                get {
                    return ((int)(this[this.tabledtCursos.IDCursoColumn]));
                }
                set {
                    this[this.tabledtCursos.IDCursoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Curso {
                get {
                    try {
                        return ((string)(this[this.tabledtCursos.CursoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Curso\' in table \'dtCursos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCursos.CursoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCursoNull() {
                return this.IsNull(this.tabledtCursos.CursoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCursoNull() {
                this[this.tabledtCursos.CursoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAlumnos_CursosRow[] GetdtAlumnos_CursosRows() {
                return ((dtAlumnos_CursosRow[])(base.GetChildRows(this.Table.ChildRelations["relCursos_Alumnos"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtAlumnos_CursosRow : System.Data.DataRow {
            
            private dtAlumnos_CursosDataTable tabledtAlumnos_Cursos;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtAlumnos_CursosRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtAlumnos_Cursos = ((dtAlumnos_CursosDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IDAlumno {
                get {
                    try {
                        return ((int)(this[this.tabledtAlumnos_Cursos.IDAlumnoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IDAlumno\' in table \'dtAlumnos_Cursos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAlumnos_Cursos.IDAlumnoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IDCurso {
                get {
                    try {
                        return ((int)(this[this.tabledtAlumnos_Cursos.IDCursoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'IDCurso\' in table \'dtAlumnos_Cursos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAlumnos_Cursos.IDCursoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAlumnosRow dtAlumnosRow {
                get {
                    return ((dtAlumnosRow)(this.GetParentRow(this.Table.ParentRelations["relAlumnos_Cursos"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["relAlumnos_Cursos"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCursosRow dtCursosRow {
                get {
                    return ((dtCursosRow)(this.GetParentRow(this.Table.ParentRelations["relCursos_Alumnos"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["relCursos_Alumnos"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDAlumnoNull() {
                return this.IsNull(this.tabledtAlumnos_Cursos.IDAlumnoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDAlumnoNull() {
                this[this.tabledtAlumnos_Cursos.IDAlumnoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDCursoNull() {
                return this.IsNull(this.tabledtAlumnos_Cursos.IDCursoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDCursoNull() {
                this[this.tabledtAlumnos_Cursos.IDCursoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtAlumnosRowChangeEvent : System.EventArgs {
            
            private dtAlumnosRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAlumnosRowChangeEvent(dtAlumnosRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAlumnosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtCursosRowChangeEvent : System.EventArgs {
            
            private dtCursosRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCursosRowChangeEvent(dtCursosRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtCursosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtAlumnos_CursosRowChangeEvent : System.EventArgs {
            
            private dtAlumnos_CursosRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAlumnos_CursosRowChangeEvent(dtAlumnos_CursosRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtAlumnos_CursosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591